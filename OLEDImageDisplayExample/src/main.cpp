#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width,  in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

#define BITMAP_WIDTH    64
#define BITMAP_HEIGHT   64

static const unsigned char PROGMEM example[] = {
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00001111, 0b10000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111111, 0b11100000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11100000, 0b00110000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b10000000, 0b00011000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00000000, 0b00001000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11110000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00111110, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000011, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00011111, 0b11111110, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b01110000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b11000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000001, 0b10000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000011, 0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000010, 0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000110, 0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00001100, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000, 0b00001000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00011000, 0b00000000, 0b00000000, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00010000, 0b00000000, 0b00000000, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00110000, 0b00000000, 0b00000000, 0b00110000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00100000, 0b00000000, 0b00000000, 0b00110000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b01100000, 0b00000001, 0b11111100, 0b00110000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b11000000, 0b00000001, 0b00000100, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00000001, 0b10000001, 0b11000001, 0b00000110, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00000011, 0b00000011, 0b01100001, 0b00000010, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00001110, 0b00000010, 0b01100001, 0b00000011, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b00111000, 0b00000110, 0b01100001, 0b00000001, 0b00010000, 0b00000000, 0b00000000,
  0b00000000, 0b11110000, 0b00001100, 0b00100011, 0b00000001, 0b11110000, 0b00000000, 0b00000000,
  0b00000000, 0b00111111, 0b11111000, 0b00110011, 0b00000000, 0b01000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00011110, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
  0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000,
};

// declare an SSD1306 display object connected to I2C
Adafruit_SSD1306 oled(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

void drawBitmap(const uint8_t *bitmap, uint8_t width, uint8_t height, bool vertical = true, bool horizontal = true)
{
  oled.clearDisplay();

  oled.drawBitmap(
      horizontal ? (oled.width() - width) / 2 : 0,
      vertical ? (oled.height() - height) / 2 : 0,
      bitmap,
      width,
      height,
      WHITE);
  oled.display();
}

void centerText(String text, bool vertical = true, bool horizontal = true)
{
  oled.clearDisplay();

  int16_t x1, y1;
  uint16_t w, h;
  oled.getTextBounds(text, 0, 0, &x1, &y1, &w, &h);

  int16_t x = horizontal ? (SCREEN_WIDTH - w) / 2 : 0;
  int16_t y = vertical ? (SCREEN_HEIGHT - h) / 2 : 0;

  oled.setCursor(x, y);
  oled.setTextColor(WHITE);
  oled.setTextWrap(false);
  oled.println(text);
  oled.display();
}

void setup() {
  // initialize OLED display with address 0x3C for 128x64
  if (!oled.begin(SSD1306_SWITCHCAPVCC, 0x3C))
  {
    Serial.println(F("SSD1306 allocation failed"));
    while (true);
  }

  delay(200);

  centerText("Hello, World!");
  delay(2000);

  drawBitmap(example, BITMAP_WIDTH, BITMAP_HEIGHT);
}

void loop() {
  
}